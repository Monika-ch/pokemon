{"version":3,"sources":["serviceWorker.js","Components/Pokecard.js","Components/TypeList.js","Components/Pokedex.js","Components/DiscardCard.js","Components/Pokegame.js","PokemonCache.js","Components/Main.js","Components/Home.js","Components/FriendGame.js","Components/RandomGame.js","Components/GameRules.js","Route.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Pokecard","props","number","imgSrc","this","id","slice","className","onClick","name","src","alt","width","type","exp","Component","TypeList","typeWithCount","Array","from","pokemon","map","x","reduce","acc","e","set","get","Map","playerName","isComputer","count","Pokedex","Fragment","title","p","base_experience","DiscardCard","Pokegame","hand1","hand2","getNRandomPokemon","maxHandsPossible","length","randIdx","Math","floor","random","randPokemon","splice","push","state","discardedCard","n","arr","result","len","taken","RangeError","getRandom","hand","idx","findIndex","card","newCard","concat","ifWinning","some","console","log","isAWinningHand","alert","exp1","exp2","discardCardAndSetState","handName","makeMove","newHand2","setState","makeComputerMove","shouldPickFromDeck","newHand","getCardFromDeck","randomIdxToDiscard","isWinner","checkWinner","PokemonCache","maxPokemons","triggerDownload","getPokemonData","cache","url","i","fetch","toString","then","json","convertModel","catch","err","error","types","Main","mainPokemonData","defaultProps","Home","height","to","Button","outline","color","FriendGame","size","RandomGame","Routes","path","component","GameRules","render","exact","App","pokemonCache","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1c6719a3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from \"react\";\nimport \"../css/Pokecard.css\";\n\n// const POKE_API =\n//   \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\";\n\nconst POKE_API = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\n\nlet padToThree = (number) => (number <= 999 ? `00${number}`.slice(-3) : number);\n\nclass Pokecard extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let imgSrc = `${POKE_API}${padToThree(this.props.id)}.png`;\n    return (\n      <div\n        className=\"Pokecard\"\n        onClick={() => this.props.onClick(this.props.id)}\n      >\n        <h1 className=\"Pokecard-title\">{this.props.name}</h1>\n        <div className=\"Pokecard-image\">\n          <img src={imgSrc} alt={this.props.name} width=\"150\" />\n        </div>\n        <div className=\"Pokecard-data\">Type: {this.props.type}</div>\n        <div className=\"Pokecard-data\">EXP: {this.props.exp}</div>\n      </div>\n    );\n  }\n}\n\nexport default Pokecard;\n","import React, { Component } from \"react\";\nimport \"../css/TypeList.css\";\n\nclass TypeList extends Component {\n  render() {\n    const typeWithCount = Array.from(\n      this.props.pokemon\n        .map((x) => x.type)\n        .reduce((acc, e) => acc.set(e, (acc.get(e) || 0) + 1), new Map())\n    );\n    let playerName = \"YOU\";\n    if (this.props.isComputer) {\n      playerName = \"COMPUTER\";\n    }\n    return (\n      <div>\n        <h5 className=\"TypeList-title\">{playerName}</h5>\n        <ul>\n          {typeWithCount.map(([type, count]) => (\n            <div className=\"TypeList-data\">\n              <span className=\"count\">{count} </span>\n              <span className=\"type\">{type} type</span>\n            </div>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default TypeList;\n","import React, { Component } from \"react\";\nimport Pokecard from \"./Pokecard\";\nimport TypeList from \"./TypeList\";\nimport \"../css/Pokedex.css\";\n\nclass Pokedex extends Component {\n  render() {\n    let title;\n    // if(this.props.isWinner) {\n    //   title = <h1 className=\"Pokedex-winner\">Winning Hand</h1>\n    // } else {\n    //   title = <h1 className=\"Pokedex-loser\">Losing Hand</h1>;\n    // }\n    let playerName;\n    if (this.props.isComputer) {\n      playerName = <h1 className=\"Pokedex-winner\">COMPUTER</h1>;\n    } else {\n      playerName = <h1 className=\"Pokedex-loser\">YOU</h1>;\n    }\n\n    return (\n      <React.Fragment>\n        <div className=\"wrapper\">\n          <div className=\"TypeList\">\n            <TypeList\n              isComputer={this.props.isComputer}\n              pokemon={this.props.pokemon}\n            />\n          </div>\n          <div className=\"Pokedex\">\n            {title}\n            {playerName}\n            <h4>Total Experience: {this.props.exp}</h4>\n            <div className=\"Pokedex-cards\">\n              {this.props.pokemon.map((p) => (\n                <Pokecard\n                  id={p.id}\n                  name={p.name}\n                  type={p.type}\n                  exp={p.base_experience}\n                  onClick={this.props.onClick}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Pokedex;\n","import React, { Component } from 'react'\nimport Pokecard from './Pokecard'\n\nexport default class DiscardCard extends Component {\n    render() {\n        return (\n            <div>\n                <div>\n                    <div>\n                        <div>\n                            <Pokecard\n                                id={this.props.id}\n                                name={this.props.name}\n                                type={this.props.type}\n                                exp={this.props.base_experience}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport Pokedex from \"./Pokedex\";\nimport DiscardCard from \"./DiscardCard\";\n\nfunction getRandom(arr, n) {\n  var result = new Array(n),\n    len = arr.length,\n    taken = new Array(len);\n  if (n > len)\n    throw new RangeError(\"getRandom: more elements taken than available\");\n  while (n--) {\n    var x = Math.floor(Math.random() * len);\n    result[n] = arr[x in taken ? taken[x] : x];\n    taken[x] = --len in taken ? taken[len] : len;\n  }\n  return result;\n}\n\nconst maxHandsPossible = 4;\nclass Pokegame extends Component {\n  getNRandomPokemon(n) {\n    return getRandom(this.props.pokemon, n);\n  }\n\n  constructor(props) {\n    super(props);\n    let hand1 = [];\n    let hand2 = [...this.getNRandomPokemon(maxHandsPossible * 2)];\n    while (hand1.length < hand2.length) {\n      let randIdx = Math.floor(Math.random() * hand2.length);\n      let randPokemon = hand2.splice(randIdx, 1)[0];\n      hand1.push(randPokemon);\n    }\n    this.state = {\n      discardedCard: { id: -1, name: \"\", type: \"\", exp: \"\" },\n      hand1: hand1,\n      hand2: hand2,\n    };\n  }\n\n  makeMove(hand, id) {\n    let idx = hand.findIndex((card) => card.id === id);\n    let discardedCard = hand[idx];\n    let newCard = this.getNRandomPokemon(1)[0];\n    let newHand = [...hand.slice(0, idx), ...hand.slice(idx + 1)];\n    return [discardedCard, newHand];\n  }\n\n  getCardFromDeck(hand) {\n    let newCard = this.getNRandomPokemon(1)[0];\n    return hand.concat(newCard);\n  }\n\n  isAWinningHand(hand) {\n    const ifWinning = Array.from(\n      hand\n        .map((x) => x.type)\n        .reduce((acc, e) => acc.set(e, (acc.get(e) || 0) + 1), new Map())\n    ).some(([c, cnt]) => cnt > 2);\n    console.log(\n      Array.from(\n        hand\n          .map((x) => x.type)\n          .reduce((acc, e) => acc.set(e, (acc.get(e) || 0) + 1), new Map())\n      )\n    );\n    console.log(\"Checked if is any winningg\");\n    return ifWinning;\n  }\n\n  checkWinner() {\n    if (this.isAWinningHand(this.state.hand1)) {\n      alert(\"Computer won\");\n    }\n    if (this.isAWinningHand(this.state.hand2)) {\n      alert(\"Human won\");\n    }\n  }\n  render() {\n    let hand1 = this.state.hand1;\n    let hand2 = this.state.hand2;\n    let exp1 = hand1.reduce((exp, pokemon) => exp + pokemon.base_experience, 0);\n    let exp2 = hand2.reduce((exp, pokemon) => exp + pokemon.base_experience, 0);\n\n    const onclick = (id) => {\n      // if only 1 card remaining dont do anything\n      if (this.state.hand2.length == 1) {\n        alert(\"Can't make a move. Pick something from deck\");\n        return;\n      }\n\n      // Hand2 is always human so we will only search in humans hand\n      discardCardAndSetState(\"hand2\", this.state.hand2, id);\n      makeComputerMove();\n      this.checkWinner();\n    };\n\n    const discardCardAndSetState = (handName, hand, id) => {\n      let [discardedCard, newHand2] = this.makeMove(hand, id);\n      this.setState({ discardedCard: discardedCard });\n      this.setState({ [handName]: newHand2 });\n    };\n\n    const makeComputerMove = () => {\n      let shouldPickFromDeck =\n        Math.random() > 0.5 || this.state.hand1.length == 1;\n      if (this.state.hand1.length == maxHandsPossible || !shouldPickFromDeck) {\n        let randomIdxToDiscard =\n          Math.floor(Math.random() * 100) % this.state.hand1.length;\n        discardCardAndSetState(\n          \"hand1\",\n          hand1,\n          this.state.hand1[randomIdxToDiscard].id\n        );\n        return;\n      }\n\n      if (this.state.hand1.length == 1 || shouldPickFromDeck) {\n        let newHand = this.getCardFromDeck(hand1);\n        this.setState({ hand1: newHand });\n      }\n    };\n    const onDeckClicked = () => {\n      if (this.state.hand2.length >= maxHandsPossible) {\n        alert(\"Cant add more cards to hand. discard few cards\");\n        return;\n      }\n      let newHand = this.getCardFromDeck(hand2);\n      this.setState({ hand2: newHand });\n      makeComputerMove();\n      this.checkWinner();\n    };\n\n    return (\n      <React.Fragment>\n        {/* <div className=\"bg\"> */}\n        <div>\n          <Pokedex\n            pokemon={hand1}\n            exp={exp1}\n            isComputer\n            isWinner={exp1 > exp2}\n            onClick={() => {}}\n          />\n          <DiscardCard\n            id={this.state.discardedCard.id}\n            type={this.state.discardedCard.type}\n            name={this.state.discardedCard.name}\n            base_experience={this.state.discardedCard.base_experience}\n          />\n          <Pokedex\n            pokemon={hand2}\n            onClick={onclick}\n            exp={exp2}\n            isWinner={exp2 > exp1}\n          />\n          <div className=\"Pokecard\" onClick={onDeckClicked}>\n            <img src=\"/pokeball.png\" width=\"50\" />\n          </div>\n        </div>\n        {/* </div> */}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Pokegame;\n","class PokemonCache {\n  static cache = [];\n  triggerDownload(maxPokemons) {\n    this.getPokemonData(maxPokemons);\n  }\n  async getPokemonData(maxPokemons) {\n    if (PokemonCache.cache.length != 0) return this.cache;\n\n    const url = \"https://pokeapi.co/api/v2/pokemon/\";\n    for (let i = 0; i < maxPokemons; i++) {\n      await fetch(url + (i + 1).toString())\n        .then((result) => result.json())\n        .then((result) => {\n          PokemonCache.cache.push(this.convertModel(result));\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }\n\n    return this.cache;\n  }\n\n  convertModel({ base_experience = 0, name, id, ...rest }) {\n    return {\n      base_experience: base_experience,\n      name: name,\n      id: id,\n      type: rest.types[0].type.name,\n    };\n  }\n\n  constructor(maxPokemons = 100) {\n    this.triggerDownload(maxPokemons);\n  }\n}\n\nexport default PokemonCache;\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Pokecard from \"./Pokecard\";\nimport Pokegame from \"./Pokegame\";\nimport PokemonCache from \"../PokemonCache\";\n\nclass Main extends Component {\n  static defaultProps = {\n    // COMMENT: Remove the comment from the  line just below this before testing\n\n    // mainPokemonData: [\n    //   { id: 4, name: \"Charmander\", type: \"fire\", base_experience: 62 },\n    //   { id: 7, name: \"Squirtle\", type: \"water\", base_experience: 63 },\n    //   { id: 11, name: \"Metapod\", type: \"bug\", base_experience: 72 },\n    //   { id: 12, name: \"Butterfree\", type: \"flying\", base_experience: 178 },\n    //   { id: 25, name: \"Pikachu\", type: \"electric\", base_experience: 112 },\n    //   { id: 39, name: \"Jigglypuff\", type: \"normal\", base_experience: 95 },\n    //   { id: 94, name: \"Gengar\", type: \"poison\", base_experience: 225 },\n    //   { id: 133, name: \"Eevee\", type: \"normal\", base_experience: 65 },\n    //   { id: 4, name: \"Charmander\", type: \"fire\", base_experience: 62 },\n    //   { id: 7, name: \"Squirtle\", type: \"water\", base_experience: 63 },\n    //   { id: 11, name: \"Metapod\", type: \"bug\", base_experience: 72 },\n    //   { id: 12, name: \"Butterfree\", type: \"flying\", base_experience: 178 },\n    //   { id: 25, name: \"Pikachu\", type: \"electric\", base_experience: 112 },\n    //   { id: 39, name: \"Jigglypuff\", type: \"normal\", base_experience: 95 },\n    //   { id: 94, name: \"Gengar\", type: \"poison\", base_experience: 225 },\n    //   { id: 133, name: \"Eevee\", type: \"normal\", base_experience: 65 },\n    //   { id: 4, name: \"Charmander\", type: \"fire\", base_experience: 62 },\n    //   { id: 7, name: \"Squirtle\", type: \"water\", base_experience: 63 },\n    //   { id: 11, name: \"Metapod\", type: \"bug\", base_experience: 72 },\n    //   { id: 12, name: \"Butterfree\", type: \"flying\", base_experience: 178 },\n    //   { id: 25, name: \"Pikachu\", type: \"electric\", base_experience: 112 },\n    //   { id: 39, name: \"Jigglypuff\", type: \"normal\", base_experience: 95 },\n    //   { id: 94, name: \"Gengar\", type: \"poison\", base_experience: 225 },\n    //   { id: 133, name: \"Eevee\", type: \"normal\", base_experience: 65 },\n    // ],\n\n    // COMMENT: Remove the line just below this before testing\n    mainPokemonData: PokemonCache.cache,\n  };\n\n  render() {\n    const pokemon = ({ match }) => {\n      let matchedPokemon = this.props.mainPokemonData.filter(\n        (p) => p.id === +match.params.id\n      )[0];\n      return (\n        <Pokecard\n          id={match.params.id}\n          name={matchedPokemon.name}\n          type={matchedPokemon.type}\n          exp={matchedPokemon.base_experience}\n        />\n      );\n    };\n\n    // if /pokemon/1 is called then\n    // render will be called with id == 1\n    // then in render we call pokemon function and give it id 1\n    return (\n      <div>\n        <Pokegame pokemon={this.props.mainPokemonData} />\n        {/* <Switch>\n                <Route path=\"/pokemon/:id\" render={pokemon}/>\n            </Switch> */}\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\nimport { Link, Switch, Route } from \"react-router-dom\";\nimport \"../css/Home.css\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <header>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col centerItems\">\n                <h1>\n                  P\n                  <img\n                    src=\"/pokeball.png\"\n                    height=\"50\"\n                    width=\"50\"\n                    alt=\"Pokeball\"\n                  />\n                  kem\n                  <img\n                    src=\"/pokeball.png\"\n                    height=\"50\"\n                    width=\"50\"\n                    alt=\"Pokeball\"\n                  />\n                  n\n                </h1>\n                <h3>..let the battle begin</h3>\n              </div>\n            </div>\n          </div>\n        </header>\n\n        <div className=\"container\">\n          <div className=\"battleCard\">\n            <div className=\"row justify-content-center\">\n              <div className=\"col-8 mb-2\">\n                <h5>Choose Your Battle</h5>\n              </div>\n              <div className=\"col-12\">\n                <Link to=\"/pokemon\">\n                  <Button outline color=\"danger\" className=\"mt-2 p-2 col-6\">\n                    vs Computer\n                  </Button>\n                </Link>\n                <br />\n                <Link to=\"/friendgame\">\n                  <Button outline color=\"warning\" className=\"mt-3 p-2 col-6\">\n                    vs A Friend\n                  </Button>\n                </Link>\n                <br />\n                <Link to=\"/randomgame\">\n                  <Button\n                    outline\n                    color=\"success\"\n                    className=\"mt-3 mb-2 p-2 col-6\"\n                  >\n                    vs Random Opponent\n                  </Button>\n                </Link>\n                <br />\n                <Link to=\"/game_rules\" className=\"mt-2\">\n                  <Button outline className=\"mt-3 col-6 game-rules\">\n                    Game Rules\n                  </Button>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react'\nimport \"../css/Game.css\"\nimport { Button } from 'reactstrap'\nimport { Link } from 'react-router-dom';\n\nfunction FriendGame(props){\n    return (\n        <React.Fragment>\n            <div className=\"container card-coming-soon\">\n                <Link to=\"/\">\n                    <Button size=\"lg\" color=\"success\" className=\"button\"><i className=\"fa fa-home fa-lg\" /> </Button>\n                </Link>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-6\">\n                        <h4>COMING S<img src=\"/pokeball.png\" height=\"30\" width=\"30\" alt=\"Pokeball\" /><img src=\"/pokeball.png\" height=\"30\" width=\"30\" alt=\"Pokeball\" />N . .</h4>\n                        <h6>Want to have a POKE-BATTLE with friends ? </h6>\n                        <p>No worries ! Soon you will be able to invite and challenge your friends for the amazing POKE-BATTLES !</p>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default FriendGame;\n","import React, { Component } from 'react'\nimport \"../css/Game.css\"\nimport { Button } from 'reactstrap'\nimport { Link } from 'react-router-dom';\n\nfunction RandomGame(props){\n    return (\n        <React.Fragment>\n            <Link to=\"/\">\n                <Button size=\"lg\" color=\"success\" className=\"button\"><i className=\"fa fa-home fa-lg\" /></Button>\n            </Link>\n\n            <div className=\"container card-coming-soon\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-6\">\n                        <h4>COMING S<img src=\"/pokeball.png\" height=\"30\" width=\"30\" alt=\"Pokeball\" /><img src=\"/pokeball.png\" height=\"30\" width=\"30\" alt=\"Pokeball\" />N . .</h4>\n                        <h6>Want to step up your POKE-BATTLES ?</h6>\n                        <p>Soon you will be able to challenge yourself by challenging random opponents for amazing POKE-BATTLES !</p>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default RandomGame;\n","import React, { Component } from 'react'\nimport \"../css/Game.css\"\nimport { Button } from 'reactstrap'\nimport { Link } from 'react-router-dom';\n\nfunction FriendGame(props){\n    return (\n        <React.Fragment>\n            <div className=\"container card-coming-soon\">\n                <Link to=\"/\">\n                    <Button size=\"lg\" color=\"success\" className=\"button\"><i className=\"fa fa-home fa-lg\" /> </Button>\n                </Link>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-6\">\n                        <h5 className=\"card-title\">GAME RULES</h5>\n                        <h6 className=\"card-text\">Want to have a POKE-BATTLE with your friends ? </h6>\n                        <p>No worries ! You will soon be able to invite your friends for the amazing POKE-BATTLES !</p>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default FriendGame;\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Main from \"./Components/Main\";\nimport Home from \"./Components/Home\";\nimport FriendGame from \"./Components/FriendGame\";\nimport RandomGame from \"./Components/RandomGame\";\nimport GameRules from \"./Components/GameRules\";\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route path=\"/pokemon\" component={Main} />\n      <Route path=\"/friendgame\" component={FriendGame} />\n      <Route path=\"/randomgame\" component={RandomGame} />\n      <Route path=\"/game_rules\" component={GameRules} />\n      <Route path=\"/pokemon/:id\" render={Main.pokemon} />\n      <Route exact path=\"/\" component={Home} />\n    </Switch>\n  );\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Routes from \"./Route\";\nimport PokemonCache from \"./PokemonCache\";\nconst baseUrl = \"pokemon\";\nclass App extends Component {\n  // COMMENT: Remove the line just below this before testing\n  static pokemonCache = new PokemonCache();\n  render() {\n    // Adding baseName so that the website works with github.icon\n    // see here:https://medium.com/@Dragonza/react-router-problem-with-gh-pages-c93a5e243819\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Routes />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n//import 'bootstrap/dist/css/bootstrap.min.css';\n// import 'typeface-lobster';\n// import 'typeface-open-sans';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}